"use strict";(()=>{var e={};e.id=755,e.ids=[755],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3952:e=>{e.exports=require("socket.io")},9967:e=>{e.exports=require("ssh2")},6752:(e,o,r)=>{r.r(o),r.d(o,{config:()=>S,default:()=>u,routeModule:()=>p});var n={};r.r(n),r.d(n,{default:()=>d});var s=r(1802),t=r(7153),c=r(6249);let i=r(9967),{Client:a}=i,{Server:l}=r(3952),sshHandler=async(e,o)=>{if("POST"!==e.method){o.status(405).json({error:"Method not allowed"});return}let{host:r,username:n,password:s}=e.body,t=new l(o.socket.server,{cors:{origin:"*"}});console.log("Socket.IO server created"),t.on("connection",e=>{console.log("Socket.IO connected");let o=new a;o.on("ready",()=>{console.log("SSH Connection established"),o.shell((r,n)=>{if(r){console.error("SSH Error:",r.message),e.emit("error",`SSH Error: ${r.message}`);return}e.on("message",e=>n.write(e)),n.on("data",o=>e.emit("message",o.toString())),n.on("close",()=>{o.end(),e.disconnect(),console.log("SSH connection closed")})})}).on("error",o=>{console.error("SSH connection error:",o),e.emit("error","SSH connection error")}).connect({host:r,username:n,password:s})}),o.status(200).end()},d=sshHandler,u=(0,c.l)(n,"default"),S=(0,c.l)(n,"config"),p=new s.PagesAPIRouteModule({definition:{kind:t.x.PAGES_API,page:"/api/ssh",pathname:"/api/ssh",bundlePath:"",filename:""},userland:n})}};var o=require("../../webpack-api-runtime.js");o.C(e);var __webpack_exec__=e=>o(o.s=e),r=o.X(0,[222],()=>__webpack_exec__(6752));module.exports=r})();